// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"go.uber.org/zap"
	"golang-sample/internal/api/routes/auth"
	"golang-sample/internal/api/storage"
	"golang-sample/pkg/postgres"
)

// Injectors from wire.go:

func InitApp(isDebugMode bool, db string, log *zap.SugaredLogger) (*Handler, func(), error) {
	gormDB, cleanup, err := postgres.NewGormDB(isDebugMode, db)
	if err != nil {
		return nil, nil, err
	}
	storageStorage := storage.NewStorage(log, gormDB)
	controller := auth.NewAuthController(log, storageStorage)
	handler := NewApiBiz(log, controller)
	return handler, func() {
		cleanup()
	}, nil
}
